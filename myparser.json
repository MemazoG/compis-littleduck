{
   "lex": {
      "macros": {
         "digit": "[0-9]",
         "digits": "{digit}+",
         "letter": "[a-zA-Z]",
         "letters": "{letter}+",
         "space": " "
      },
      "rules": [
         ["\\s+",                                  "/* skips whisespace */"],

         ["program",                               "return 'PROGRAM'"],
         ["var",                                   "return 'VAR'"],
         ["int",                                   "return 'INT'"],
         ["float",                                 "return 'FLOAT'"],
         ["if",                                    "return 'IF'"],
         ["else",                                  "return 'ELSE'"],
         ["print",                                 "return 'PRINT'"],

         ["{letter}({letter}|{digit})*",           "return 'ID'"],
         ["{digits}\\.{digits}",                   "return 'CTE_FLOAT'"],
         ["{digits}",                              "return 'CTE_INT'"],
         ["\\'({letters}|{digits}|{space})*\\'",   "return 'CTE_STRING'"],

         ["\\;",                                   "return ';'"],
         ["\\:",                                   "return ':'"],
         ["\\,",                                   "return ','"],

         ["\\{",                                   "return '{'"],
         ["\\}",                                   "return '}'"],
         ["\\(",                                   "return '('"],
         ["\\)",                                   "return ')'"],
         ["\\[",                                   "return '['"],
         ["\\]",                                   "return ']'"],

         ["\\>",                                   "return '>'"],
         ["\\<",                                   "return '<'"],
         ["\\==",                                  "return '=='"],
         ["\\=",                                   "return '='"],
         ["\\!=",                                  "return '!='"],
         ["\\&",                                   "return '&'"],
         ["\\|",                                   "return '|'"],

         ["\\+",                                   "return '+'"],
         ["-",                                     "return '-'"],
         ["\\*",                                   "return '*'"],
         ["\\/",                                   "return '/'"],

         ["$",                                     "return 'EOF'"],
         [".",                                     "return 'ERROR'"]
      ]
   },

   "bnf": {
      "start": [["program",   ""]],

      "program": [
         ["PROGRAM ID ; vars_sec bloque EOF",   ""]
      ],

      "vars_sec": [
         ["vars", ""],
         ["", ""]
      ],

      "vars": [
         ["VAR ID vars_mismo_tipo : tipo ; dec_mult", ""]
      ],

      "vars_mismo_tipo": [
         [", ID vars_mismo_tipo", ""],
         ["", ""]
      ],

      "tipo": [
         ["INT", ""],
         ["FLOAT", ""]
      ],

      "dec_mult": [
         ["ID vars_mismo_tipo : tipo ; dec_mult", ""],
         ["", ""]
      ],

      "bloque": [
         ["{ estatutos }", ""]
      ],

      "estatutos": [
         ["estatuto estatutos", ""],
         ["", ""]
      ],

      "estatuto": [
         ["asignacion", ""],
         ["condicion", ""],
         ["escritura", ""]
      ],

      "asignacion": [
         ["ID = expresion ;", ""]
      ],

      "expresion": [
         ["exp expresion_comp", ""]
      ],

      "expresion_comp": [
         ["> exp", ""],
         ["< exp", ""],
         ["!= exp", ""],
         ["", ""]
      ],

      "exp": [
         ["termino exp_a", ""]
      ],

      "exp_a": [
         ["+ termino", ""],
         ["- termino", ""],
         ["", ""]
      ],

      "termino": [
         ["factor termino_a", ""]
      ],

      "termino_a": [
         ["* factor", ""],
         ["/ factor", ""],
         ["", ""]
      ],

      "factor": [
         ["( expresion )", ""],
         ["+ var_cte", ""],
         ["- var_cte", ""],
         ["var_cte", ""]
      ],

      "var_cte": [
         ["ID", ""],
         ["CTE_INT", ""],
         ["CTE_FLOAT", ""]
      ],

      "condicion": [
         ["IF ( expresion ) bloque condicion_else ;", ""]
      ],

      "condicion_else": [
         ["ELSE bloque", ""],
         ["", ""]
      ],

      "escritura": [
         ["PRINT ( escritura_tipo ) ;", ""]
      ],

      "escritura_tipo": [
         ["expresion escritura_mult", ""],
         ["CTE_STRING escritura_mult", ""]
      ],

      "escritura_mult": [
         [", escritura_tipo", ""],
         ["", ""]
      ]
   }
}
 